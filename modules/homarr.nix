# Auto-generated using compose2nix v0.3.2-pre.
{ pkgs, lib, config, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
  };

  services.caddy = {
    virtualHosts."dash.nixie.org".extraConfig = ''
      reverse_proxy :7575
               	tls internal
                forward_auth :9091 {
                    uri /api/authz/forward-auth
                    copy_headers Remote-User Remote-Groups Remote-Email Remote-Name
                }
    '';
       };

  # Create the User
  users.users.homarr = {
    isSystemUser = true;
    home = "/var/lib/homarr";
    createHome = true;
    group = "homarr";
    extraGroups = ["authelia-nixie"];
  };
         users.groups.homarr = {};


  virtualisation.oci-containers.backend = "podman";

  networking.firewall.trustedInterfaces = [ "podman0" "cni-podman0" ];


  # Containers
  virtualisation.oci-containers.containers."homarr" = {
    image = "ghcr.io/homarr-labs/homarr:latest";
    extraOptions = [ "--dns=10.100.0.1" "--dns=8.8.8.8" "--dns=1.1.1.1" "--network=bridge"];
    environment = {
      "AUTH_PROVIDERS" = "credentials,oidc";
      "AUTH_OIDC_ISSUER" = "https://auth.nixie.org";
      "AUTH_OIDC_CLIENT_NAME"="Authelia";
      "AUTH_OIDC_AUTO_LOGIN"= "false";
      "AUTH_OIDC_ADMIN_GROUP"="admins";
      "AUTH_OIDC_OWNER_GROUP"="admins";
      "AUTH_OIDC_FORCE_USERINFO"="true";
      "NEXTAUTH_URL"="https://dash.nixie.org";
      "NODE_TLS_REJECT_UNAUTHORIZED" = "0";
      "AUTH_LOGOUT_REDIRECT_URL"="https://auth.nixie.org/logout";
    };
    environmentFiles = [config.sops.templates."homarr.env".path];
    volumes = [
      "/var/lib/homarr/appdata:/appdata:rw"
    ];
    ports = [
      "7575:7575/tcp"
    ];
    log-driver = "journald";

  };
  systemd.tmpfiles.rules = [
     "d /var/lib/homarr/appdata 0755 homarr wheel -"
   ];
  systemd.services."podman-homarr" = {

    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };

    partOf = [
      "podman-compose-homarr-root.target"
    ];
    wantedBy = [
      "podman-compose-homarr-root.target"
    ];
  };

  # Networks


  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-homarr-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
  sops.templates."homarr.env"={
    owner="homarr";
    content = ''
              SECRET_ENCRYPTION_KEY=${config.sops.placeholder."nixie/homarr/homarrSecretKey"}
              AUTH_OIDC_CLIENT_SECRET=${config.sops.placeholder."nixie/homarr/homarrSecret"}
              AUTH_OIDC_CLIENT_ID=${config.sops.placeholder."nixie/homarr/homarrID"}
              '';
};
    sops.secrets = {
      "nixie/homarr/homarrSecretKey".owner = "homarr";
      "nixie/homarr/homarrSecret".owner = "homarr";
      "nixie/homarr/homarrID"={owner="authelia-nixie";mode="0440";};
      "nixie/homarr/homarrSecretHashed"={owner="authelia-nixie";mode="0440";};
    };
}
